{"version":3,"sources":["components/Search.js","components/Results.js","components/Home.js","components/Result.js","App.js","reportWebVitals.js","index.js"],"names":["Search","props","useState","searchBarState","setSearchBarState","className","name","value","onChange","event","target","console","log","type","placeholder","onClick","setSearchedTitle","setHasSearched","Results","searchedResults","setSearchedResults","setSelectedMovie","useEffect","a","fetch","searchedTitle","respond","json","data","fetchedData","renderResult","map","index","style","textAlign","show","width","src","image","medium","display","marginBottom","Home","hasSearched","Result","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mLAGe,SAASA,EAAOC,GAC3B,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAeA,OAAO,sBAAKC,UAAU,SAAf,UACP,uBAAOC,KAAK,eAAeC,MAAOJ,EAAgBK,SAdvB,SAACC,GACxBL,EAAkBK,EAAMC,OAAOH,OAC/BI,QAAQC,IAAIH,EAAMC,OAAOH,QAYmDM,KAAK,OAAOC,YAAY,2BAA0B,uBAClI,uBAAOD,KAAK,SAASE,QAVA,WAGjBd,EAAMe,iBAAiBb,GACvBF,EAAMgB,gBAAe,GACrBb,EAAkB,KAKsBC,UAAU,gBAAgBE,MAAM,c,4BChBjE,SAASW,EAAQjB,GAE5B,MAA8CC,mBAAS,IAAvD,mBAAOiB,EAAP,KAAwBC,EAAxB,KAEA,EAA0ClB,mBAAS,MAAnD,mBAAsBmB,GAAtB,WAIAC,qBAAU,WAAM,4CACZ,8BAAAC,EAAA,+EAE4BC,MAAM,yCAAD,OAA0CvB,EAAMwB,gBAFjF,cAEYC,EAFZ,gBAGyBA,EAAQC,OAHjC,OAGYC,EAHZ,OAIQR,EAAmBQ,GACnBjB,QAAQC,IAAI,kBAAmBO,GALvC,kDAQQR,QAAQC,IAAR,MARR,2DADY,uBAAC,WAAD,wBAaZiB,KAED,IAGH,IAIMC,EAAeX,EAAgBY,KAAI,SAACH,EAAMI,GAG5C,OAFArB,QAAQC,IAAI,6BAA6BgB,GAGzC,qBAAKvB,UAAW,cAAhB,SAOI,sBAAKU,QAAS,kBAAMM,EAAiBO,IAArC,UACI,oBAAIK,MAAO,CAAEC,UAAW,UAAxB,SAAqCN,EAAKO,KAAK7B,OAC/C,qBAAK2B,MAAO,CAACG,MAAO,QAASC,IAAyB,OAApBT,EAAKO,KAAKG,MAAiB,aAAeV,EAAKO,KAAKG,MAAMC,aAThEP,MAqBxC,OACI,sBAAK3B,UAAU,YAAf,UACI,sDAAyBJ,EAAMwB,iBAC3B,wBAAQpB,UAAU,cAAa4B,MAAO,CAACO,QAAQ,eAAgBC,aAAc,QAAS1B,QAhC9E,WAChBd,EAAMgB,gBAAe,IA+Bb,4BACA,qBAAKZ,UAAU,UAAf,SACKyB,IAAiB,GAAK,UAAYA,OC7DxC,SAASY,IACpB,MAA0CxC,mBAAS,IAAnD,mBAAOuB,EAAP,KAAsBT,EAAtB,KACA,EAAsCd,oBAAS,GAA/C,mBAAOyC,EAAP,KAAoB1B,EAApB,KAEA,OACA,sBAAKZ,UAAU,OAAf,UACA,oBAAIA,UAAU,QAAd,0BACA,cAACL,EAAD,CAAQgB,iBAAkBA,EAAkBC,eAAgBA,IAC3D0B,EAAc,cAACzB,EAAD,CAASD,eAAgBA,EAAgBQ,cAAeA,IAAmB,M,mBCT/E,SAASmB,EAAQ3C,GAC5B,OACI,qBAAKI,UAAU,YAAf,SACI,2CCaGwC,MAbf,WACE,OACE,qBAAKxC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAACN,EAAD,MAC/B,cAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,UAAUC,QAAS,cAACJ,EAAD,cCAhCK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.b9e07650.chunk.js","sourcesContent":["import React, {useState} from \"react\";\nimport '../index.css';\n\nexport default function Search(props) {\n    const [searchBarState, setSearchBarState] = useState(\"\");\n    \n    const handleSearchChange = (event) => {\n        setSearchBarState(event.target.value)\n        console.log(event.target.value)\n    }\n\n    const handleSubmit = () => {\n        //Bring user to result page\n        //Transfer Name to result page as well.\n        props.setSearchedTitle(searchBarState);\n        props.setHasSearched(true);\n        setSearchBarState(\"\");\n    }\n    \n    return <div className='search'>\n    <input name=\"searchedText\" value={searchBarState} onChange={handleSearchChange} type='text' placeholder='Enter a Movie Title...'/><br />\n    <input type='submit' onClick={handleSubmit} className='search-button' value='submit'/>\n    </div>\n}","import React, { useState, useEffect } from 'react';\n\n// import { Link } from 'react-router-dom';\nimport Search from './Search';\n\nexport default function Results(props) {\n    // const [chosenMovie, setChosenMovie] = useContext();\n    const [searchedResults, setSearchedResults] = useState([]);\n\n    const [selectedMovie, setSelectedMovie] = useState(null)\n    // const movieData = createContext();\n\n    // API CALL\n    useEffect(() => {\n        async function fetchedData() {\n            try {\n                let respond = await fetch(`https://api.tvmaze.com/search/shows?q=${props.searchedTitle}`);\n                let data = await respond.json();\n                setSearchedResults(data);\n                console.log(\"THIS IS THE API\", searchedResults)\n            }\n            catch (error) {\n                console.log(error);\n            }\n        }\n        \n        fetchedData();\n\n    }, [])\n\n    // CLICK EVENT\n    const handleClick = () => {\n        props.setHasSearched(false);\n    }\n\n    const renderResult = searchedResults.map((data, index) => {\n        console.log('THIS IS DATA FROM ONE ITEM',data)\n        // let imgurl= data.show.image['medium'];\n        return ( \n        <div className={\"moviePoster\"} key={index} \n\n        >\n            {/* // onClick={ \n            //     () => { setChosenMovie(data) }\n            // } \n            // > */}\n            <div onClick={() => setSelectedMovie(data)}>\n                <h3 style={{ textAlign: \"center\" }}>{data.show.name}</h3>\n                <img style={{width: \"auto\"}} src={data.show.image === null ? \"no results\" : data.show.image.medium}/>\n                {/* <img style={{width: \"auto\"}} src={imgurl} /> */}\n            </div>\n        </div >\n        )\n        // }\n    })\n\n    // const selectedMovieHTML = () => {\n    //     return <div><h1>Selected Movie Is working</h1></div>\n    // }\n\n    return (\n        <div className='container'>\n            <h1>This is result Page {props.searchedTitle}</h1>\n                <button className=\"searchagain\"style={{display:\"inline-block\", marginBottom: '1rem'}} onClick={handleClick}>Search Again !</button>\n                <div className=\"results\">\n                    {renderResult === [] ? \"Loading\" : renderResult}\n                    {/* {selectedMovie === null ? \"\" : selectedMovieHTML} */}\n                </div>\n        </div>\n    )\n}\n\n","import React, {useState} from 'react';\nimport Search from './Search';\nimport Results from './Results'\n\nexport default function Home() {\n    const [searchedTitle, setSearchedTitle] = useState(\"\");\n    const [hasSearched, setHasSearched] = useState(false);\n\n    return ( \n    <div className='home'>\n    <h1 className='title'>TVMaze React</h1>\n    <Search setSearchedTitle={setSearchedTitle} setHasSearched={setHasSearched} />\n    {hasSearched ? <Results setHasSearched={setHasSearched} searchedTitle={searchedTitle} />: \"\"}\n    </div>\n    )\n}","import React from 'react';\n\n\nexport default function Result (props) {\n    return (\n        <div className=\"container\">\n            <h1>WORKING</h1>\n            {/* <img src=\"\" alt=\"\" /> */}\n        </div>\n\n    )\n}","// import logo from './logo.svg';\nimport './index.css';\nimport Home from './components/Home'\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\"\nimport Result from './components/Result';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Routes>\n          <Route exact path=\"/\" element={<Home/>} />\n          <Route exact path=\"/result\" element={<Result/>} />\n        </Routes>\n      </Router>   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}